class Solution {
    public int numIslands(char[][] grid) {
        boolean [][] vis=new boolean[grid.length][grid[0].length];
        int count=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]=='1' && vis[i][j]==false){
                    count++;
                    dfs(i,j,vis,grid);
                }
            }
        }
        return count;
    }
    public void dfs(int i,int j,boolean[][]vis,char[][] grid){
        if(i < 0 || i >= grid.length || j < 0 || j >= grid[0].length ||grid[i][j]=='0'||vis[i][j]){
            return;
        }
        vis[i][j]=true;
        dfs(i+1,j,vis,grid);
        dfs(i,j+1,vis,grid);
        //dfs()
        dfs(i-1,j,vis,grid);
        dfs(i,j-1,vis,grid);
    }
}
